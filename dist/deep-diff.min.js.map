{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","deepDiff","validKinds","inherits","ctor","superCtor","super_","constructor","writable","configurable","Diff","kind","path","this","length","DiffEdit","origin","DiffNew","DiffDeleted","DiffArray","index","item","arrayRemove","arr","from","to","rest","slice","push","apply","realTypeOf","subject","type","Math","Array","isArray","toString","test","hashThisString","string","hash","char","charCodeAt","getOrderIndependentHash","accum","forEach","arrayString","keyValueString","stringToHash","lhs","rhs","changes","prefilter","stack","orderIndependent","currentPath","normalize","alt","j","k","other","ltype","rtype","ldefined","getOwnPropertyDescriptor","rdefined","sort","a","b","undefined","akeys","keys","pkeys","indexOf","isNaN","observableDiff","observer","accumulateDiff","difference","applyChange","target","source","change","it","last","applyArrayChange","u","defineProperties","diff","orderIndependentDiff","orderIndependentObservableDiff","orderIndepHash","applyDiff","filter","revertChange","revertArrayChange","isConflict","$conflict","DeepDiff"],"mappings":"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","file":"deep-diff.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n",";(function(root, factory) { // eslint-disable-line no-extra-semi\n  var deepDiff = factory(root);\n  // eslint-disable-next-line no-undef\n  if (typeof define === 'function' && define.amd) {\n      // AMD\n      define('DeepDiff', function() { // eslint-disable-line no-undef\n          return deepDiff;\n      });\n  } else if (typeof exports === 'object' || typeof navigator === 'object' && navigator.product.match(/ReactNative/i)) {\n      // Node.js or ReactNative\n      module.exports = deepDiff;\n  } else {\n      // Browser globals\n      var _deepdiff = root.DeepDiff;\n      deepDiff.noConflict = function() {\n          if (root.DeepDiff === deepDiff) {\n              root.DeepDiff = _deepdiff;\n          }\n          return deepDiff;\n      };\n      root.DeepDiff = deepDiff;\n  }\n}(this, function(root) {\n  var validKinds = ['N', 'E', 'A', 'D'];\n\n  // nodejs compatible on server side and in the browser.\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n\n  function Diff(kind, path) {\n    Object.defineProperty(this, 'kind', {\n      value: kind,\n      enumerable: true\n    });\n    if (path && path.length) {\n      Object.defineProperty(this, 'path', {\n        value: path,\n        enumerable: true\n      });\n    }\n  }\n\n  function DiffEdit(path, origin, value) {\n    DiffEdit.super_.call(this, 'E', path);\n    Object.defineProperty(this, 'lhs', {\n      value: origin,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffEdit, Diff);\n\n  function DiffNew(path, value) {\n    DiffNew.super_.call(this, 'N', path);\n    Object.defineProperty(this, 'rhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffNew, Diff);\n\n  function DiffDeleted(path, value) {\n    DiffDeleted.super_.call(this, 'D', path);\n    Object.defineProperty(this, 'lhs', {\n      value: value,\n      enumerable: true\n    });\n  }\n  inherits(DiffDeleted, Diff);\n\n  function DiffArray(path, index, item) {\n    DiffArray.super_.call(this, 'A', path);\n    Object.defineProperty(this, 'index', {\n      value: index,\n      enumerable: true\n    });\n    Object.defineProperty(this, 'item', {\n      value: item,\n      enumerable: true\n    });\n  }\n  inherits(DiffArray, Diff);\n\n  function arrayRemove(arr, from, to) {\n    var rest = arr.slice((to || from) + 1 || arr.length);\n    arr.length = from < 0 ? arr.length + from : from;\n    arr.push.apply(arr, rest);\n    return arr;\n  }\n\n  function realTypeOf(subject) {\n    var type = typeof subject;\n    if (type !== 'object') {\n      return type;\n    }\n\n    if (subject === Math) {\n      return 'math';\n    } else if (subject === null) {\n      return 'null';\n    } else if (Array.isArray(subject)) {\n      return 'array';\n    } else if (Object.prototype.toString.call(subject) === '[object Date]') {\n      return 'date';\n    } else if (typeof subject.toString === 'function' && /^\\/.*\\//.test(subject.toString())) {\n      return 'regexp';\n    }\n    return 'object';\n  }\n\n  // http://werxltd.com/wp/2010/05/13/javascript-implementation-of-javas-string-hashcode-method/\n  function hashThisString(string) {\n    var hash = 0;\n    if (string.length === 0) { return hash; }\n    for (var i = 0; i < string.length; i++) {\n      var char = string.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32bit integer\n    }\n    return hash;\n  }\n\n  // Gets a hash of the given object in an array order-independent fashion\n  // also object key order independent (easier since they can be alphabetized)\n  function getOrderIndependentHash(object) {\n    var accum = 0;\n    var type = realTypeOf(object);\n\n    if (type === 'array') {\n      object.forEach(function (item) {\n        // Addition is commutative so this is order indep\n        accum += getOrderIndependentHash(item);\n      });\n\n      var arrayString = '[type: array, hash: ' + accum + ']';\n      return accum + hashThisString(arrayString);\n    }\n\n    if (type === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          var keyValueString = '[ type: object, key: ' + key + ', value hash: ' + getOrderIndependentHash(object[key]) + ']';\n          accum += hashThisString(keyValueString);\n        }\n      }\n\n      return accum;\n    }\n\n    // Non object, non array...should be good?\n    var stringToHash = '[ type: ' + type + ' ; value: ' + object + ']';\n    return accum + hashThisString(stringToHash);\n  }\n\n  function deepDiff(lhs, rhs, changes, prefilter, path, key, stack, orderIndependent) {\n    changes = changes || [];\n    path = path || [];\n    stack = stack || [];\n    var currentPath = path.slice(0);\n    if (typeof key !== 'undefined' && key !== null) {\n      if (prefilter) {\n        if (typeof (prefilter) === 'function' && prefilter(currentPath, key)) {\n          return;\n        } else if (typeof (prefilter) === 'object') {\n          if (prefilter.prefilter && prefilter.prefilter(currentPath, key)) {\n            return;\n          }\n          if (prefilter.normalize) {\n            var alt = prefilter.normalize(currentPath, key, lhs, rhs);\n            if (alt) {\n              lhs = alt[0];\n              rhs = alt[1];\n            }\n          }\n        }\n      }\n      currentPath.push(key);\n    }\n\n    // Use string comparison for regexes\n    if (realTypeOf(lhs) === 'regexp' && realTypeOf(rhs) === 'regexp') {\n      lhs = lhs.toString();\n      rhs = rhs.toString();\n    }\n\n    var ltype = typeof lhs;\n    var rtype = typeof rhs;\n    var i, j, k, other;\n\n    var ldefined = ltype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].lhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].lhs, key));\n    var rdefined = rtype !== 'undefined' ||\n      (stack && (stack.length > 0) && stack[stack.length - 1].rhs &&\n        Object.getOwnPropertyDescriptor(stack[stack.length - 1].rhs, key));\n\n    if (!ldefined && rdefined) {\n      changes.push(new DiffNew(currentPath, rhs));\n    } else if (!rdefined && ldefined) {\n      changes.push(new DiffDeleted(currentPath, lhs));\n    } else if (realTypeOf(lhs) !== realTypeOf(rhs)) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (realTypeOf(lhs) === 'date' && (lhs - rhs) !== 0) {\n      changes.push(new DiffEdit(currentPath, lhs, rhs));\n    } else if (ltype === 'object' && lhs !== null && rhs !== null) {\n      for (i = stack.length - 1; i > -1; --i) {\n        if (stack[i].lhs === lhs) {\n          other = true;\n          break;\n        }\n      }\n      if (!other) {\n        stack.push({ lhs: lhs, rhs: rhs });\n        if (Array.isArray(lhs)) {\n          // If order doesn't matter, we need to sort our arrays\n          if (orderIndependent) {\n            lhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n\n            rhs.sort(function (a, b) {\n              return getOrderIndependentHash(a) - getOrderIndependentHash(b);\n            });\n          }\n          i = rhs.length - 1;\n          j = lhs.length - 1;\n          while (i > j) {\n            changes.push(new DiffArray(currentPath, i, new DiffNew(undefined, rhs[i--])));\n          }\n          while (j > i) {\n            changes.push(new DiffArray(currentPath, j, new DiffDeleted(undefined, lhs[j--])));\n          }\n          for (; i >= 0; --i) {\n            deepDiff(lhs[i], rhs[i], changes, prefilter, currentPath, i, stack, orderIndependent);\n          }\n        } else {\n          var akeys = Object.keys(lhs);\n          var pkeys = Object.keys(rhs);\n          for (i = 0; i < akeys.length; ++i) {\n            k = akeys[i];\n            other = pkeys.indexOf(k);\n            if (other >= 0) {\n              deepDiff(lhs[k], rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n              pkeys[other] = null;\n            } else {\n              deepDiff(lhs[k], undefined, changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n          for (i = 0; i < pkeys.length; ++i) {\n            k = pkeys[i];\n            if (k) {\n              deepDiff(undefined, rhs[k], changes, prefilter, currentPath, k, stack, orderIndependent);\n            }\n          }\n        }\n        stack.length = stack.length - 1;\n      } else if (lhs !== rhs) {\n        // lhs is contains a cycle at this element and it differs from rhs\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    } else if (lhs !== rhs) {\n      if (!(ltype === 'number' && isNaN(lhs) && isNaN(rhs))) {\n        changes.push(new DiffEdit(currentPath, lhs, rhs));\n      }\n    }\n  }\n\n  function observableDiff(lhs, rhs, observer, prefilter, orderIndependent) {\n    var changes = [];\n    deepDiff(lhs, rhs, changes, prefilter, null, null, null, orderIndependent);\n    if (observer) {\n      for (var i = 0; i < changes.length; ++i) {\n        observer(changes[i]);\n      }\n    }\n    return changes;\n  }\n\n  function orderIndependentDeepDiff(lhs, rhs, changes, prefilter, path, key, stack) {\n    return deepDiff(lhs, rhs, changes, prefilter, path, key, stack, true);\n  }\n\n  function accumulateDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function accumulateOrderIndependentDiff(lhs, rhs, prefilter, accum) {\n    var observer = (accum) ?\n      function (difference) {\n        if (difference) {\n          accum.push(difference);\n        }\n      } : undefined;\n    var changes = observableDiff(lhs, rhs, observer, prefilter, true);\n    return (accum) ? accum : (changes.length) ? changes : undefined;\n  }\n\n  function applyArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    } else {\n      switch (change.kind) {\n        case 'A':\n          applyArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr = arrayRemove(arr, index);\n          break;\n        case 'E':\n        case 'N':\n          arr[index] = change.rhs;\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function applyChange(target, source, change) {\n    if (typeof change === 'undefined' && source && ~validKinds.indexOf(source.kind)) {\n      change = source;\n    }\n    if (target && change && change.kind) {\n      var it = target,\n        i = -1,\n        last = change.path ? change.path.length - 1 : 0;\n      while (++i < last) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = (typeof change.path[i + 1] !== 'undefined' && typeof change.path[i + 1] === 'number') ? [] : {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          if (change.path && typeof it[change.path[i]] === 'undefined') {\n            it[change.path[i]] = [];\n          }\n          applyArrayChange(change.path ? it[change.path[i]] : it, change.index, change.item);\n          break;\n        case 'D':\n          delete it[change.path[i]];\n          break;\n        case 'E':\n        case 'N':\n          it[change.path[i]] = change.rhs;\n          break;\n      }\n    }\n  }\n\n  function revertArrayChange(arr, index, change) {\n    if (change.path && change.path.length) {\n      // the structure of the object at the index has changed...\n      var it = arr[index],\n        i, u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          delete it[change.path[i]];\n          break;\n      }\n    } else {\n      // the array item is different...\n      switch (change.kind) {\n        case 'A':\n          revertArrayChange(arr[index], change.index, change.item);\n          break;\n        case 'D':\n          arr[index] = change.lhs;\n          break;\n        case 'E':\n          arr[index] = change.lhs;\n          break;\n        case 'N':\n          arr = arrayRemove(arr, index);\n          break;\n      }\n    }\n    return arr;\n  }\n\n  function revertChange(target, source, change) {\n    if (target && source && change && change.kind) {\n      var it = target,\n        i, u;\n      u = change.path.length - 1;\n      for (i = 0; i < u; i++) {\n        if (typeof it[change.path[i]] === 'undefined') {\n          it[change.path[i]] = {};\n        }\n        it = it[change.path[i]];\n      }\n      switch (change.kind) {\n        case 'A':\n          // Array was modified...\n          // it will be an array...\n          revertArrayChange(it[change.path[i]], change.index, change.item);\n          break;\n        case 'D':\n          // Item was deleted...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'E':\n          // Item was edited...\n          it[change.path[i]] = change.lhs;\n          break;\n        case 'N':\n          // Item is new...\n          delete it[change.path[i]];\n          break;\n      }\n    }\n  }\n\n  function applyDiff(target, source, filter) {\n    if (target && source) {\n      var onChange = function (change) {\n        if (!filter || filter(target, source, change)) {\n          applyChange(target, source, change);\n        }\n      };\n      observableDiff(target, source, onChange);\n    }\n  }\n\n  Object.defineProperties(accumulateDiff, {\n\n    diff: {\n      value: accumulateDiff,\n      enumerable: true\n    },\n    orderIndependentDiff: {\n      value: accumulateOrderIndependentDiff,\n      enumerable: true\n    },\n    observableDiff: {\n      value: observableDiff,\n      enumerable: true\n    },\n    orderIndependentObservableDiff: {\n      value: orderIndependentDeepDiff,\n      enumerable: true\n    },\n    orderIndepHash: {\n      value: getOrderIndependentHash,\n      enumerable: true\n    },\n    applyDiff: {\n      value: applyDiff,\n      enumerable: true\n    },\n    applyChange: {\n      value: applyChange,\n      enumerable: true\n    },\n    revertChange: {\n      value: revertChange,\n      enumerable: true\n    },\n    isConflict: {\n      value: function () {\n        return typeof $conflict !== 'undefined';\n      },\n      enumerable: true\n    }\n  });\n\n  // hackish...\n  accumulateDiff.DeepDiff = accumulateDiff;\n  // ...but works with:\n  // import DeepDiff from 'deep-diff'\n  // import { DeepDiff } from 'deep-diff'\n  // const DeepDiff = require('deep-diff');\n  // const { DeepDiff } = require('deep-diff');\n\n  if (root) {\n    root.DeepDiff = accumulateDiff;\n  }\n\n  return accumulateDiff;\n}));\n"],"sourceRoot":""}